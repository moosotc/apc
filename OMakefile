version = 0.97b

ocaml-includes = -I +lablGL

ocamlc-cflags += -g $(ocaml-includes) -thread
ocamlopt-cflags += $(ocaml-includes) -thread -compact

ocamlc-lflags += -g $(ocaml-includes) -thread
ocamlopt-lflags += $(ocaml-includes) -thread

ocaml-libs = unix lablgl lablglut threads
ocamlc-libs = $(addsuffix .cma, $(ocaml-libs))
ocamlopt-libs = $(addsuffix .cmxa, $(ocaml-libs))

if $(target-win32)
    target-flags += -I.
    %.obj: %.c :value: $(c-digest-deps) :value: $(c-emit-stdmake-rule $@)
        $(ocamlc) -ccopt $(string -c $(target-flags) $(c-cflags)) $<

    ml_apc.obj:
else
    target-flags += -Wno-long-long -I.
    .SCANNER: %.o.scan: %.c
        $(ocamlc) -ccopt $(string $(c-cflags) \
            -MT $* -M -MG $(target-flags)) $<

    %.o: %.c :scanner: %.o.scan \
        :value: $(c-digest-deps) :value: $(c-emit-stdmake-rule $@)
        $(ocamlc) -ccopt $(string -c $(target-flags) $(c-cflags)) $<

    ml_apc.o:

$(exename apc.byte): apc.cmo ml_apc$(obj)
    $(ocamlc) -custom $(ocamlc-lflags) $(ocamlc-libs) $(target-flags) -o $@ \
    ml_apc$(obj) apc.cmo
#    imt link -edit -subsystem\:windows $@

$(exename apc.opt): apc.cmx apc$(obj) ml_apc$(obj)
    $(ocamlopt) $(ocamlopt-lflags) $(ocamlopt-libs) $(target-flags) -o $@ \
    apc.cmx ml_apc$(obj)
#    imt link /edit /subsystem\:windows $@

.PHONY: byte opt dist

byte: $(exename apc.byte)
opt: $(exename apc.opt)

all: byte

apc-$(version).tgz: $(shell cat FILES)
    rm -fr apc-$(version)
    mkdir -p apc-$(version)
    tar -T $(file FILES) -chf - -C $(dirof FILES) | tar xf - -C apc-$(version)
    tar cfz $@ apc-$(version)

dist: apc-$(version).tgz

if $(not $(target-win32))
    add-env2 (mod)
    .SUBDIRS: mod
