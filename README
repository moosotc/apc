~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is APC - graphical CPU load meter.

It is more suitable/accurate in situations where applications generate
"short"  bursts of activity and the  frequency  of said bursts divides
kernel HZ value evenly.

Kernel can use variety of values for HZ (most frequent: 100 250 1000)

PAL/SECAM video frame grabbers do so  with 25/50 FPS frequency, if the
pulse  leads  to some  application deciding  to burn CPU  (putting the
frame on the screen, encoding it, etc)  chances are good that the load
you will  see in  top(1) (or anything   `/proc/stat' based) would  not
represent reality accurately. Ditto for plain video clips.

If you  depend  on  sorta-kinda   semi-correct  load  meter  in  those
conditions APC might present a better choice.

The kernel  module   part of APC  measures  how  much time   is  spent
executing idle kernel function   - this information is  represented by
yellow color, values obtained via `/proc/stat' are represented by red.

You  can use `-help' command  line option to   get a brief overview of
tunable parameters.

Tested on[1]:

Linux 2.4.30   - AMD Athlon(tm) Processor (1.4 Ghz)
Linux 2.6.17.6 - AMD Athlon(tm)64 X2 Dual Core Processor  3800+
Linux 2.6.28   - AMD Athlon(tm)64 3800+

It's possible  that RMClock[2]  does something similar(load  measuring
wise) on Microsoft Windows.

[1] SMP not tested on 2.4 kernels (nor QUIRK mode)
[2] http://cpu.rightmark.org/products/rmclock.shtml


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
To build you will need:

OCaml  - http://caml.inria.fr/ocaml/
LablGL - http://wwwfun.kurims.kyoto-u.ac.jp/soft/lsl/lablgl.html
         (and by extension some OpenGL implementation)
GCC    - http://gcc.gnu.org/

Plus all what is required to build a kernel module.

Process:

<untar and go to directory with sources>
$ sh build.sh
$ cd mod
$ su -c 'insmod ./its.ko' - 2.6 Kernels
$ su -c 'insmod ./its.o'  - 2.4 Kernels

If the module fails to load consult dmesg(8). Most likely cause is the
lack  of  exported `default_idle'    function  and no   specific power
management idle function is specified. Few workarounds follow:

Variant 1
    Add `idle=halt' to the kernel command  line (method depends on the
    boot-loader) and reboot.

Variant 2 (DANGEROUS)
    ------------------------------------------------------------------
    Kernel 2.6 
    $ func=$(awk '/default_idle$/ {print "0x" $1}' /proc/kallsyms)
    $ su -c "insmod ./itc.ko idle_func=$func"

    ------------------------------------------------------------------
    Kernel 2.4
    $ func=$(awk '/default_idle$/ {print "0x" $1}' /proc/ksyms)
    $ su -c "insmod ./itc.o idle_func=$func"

======================================================================
$ cd ..
$ major=$(awk '/ itc$/ {print $1}' /proc/devices)
$ su -c "mknod -m 0444 itc c $major 0"

[make sure you are in X]
$ ./apc
